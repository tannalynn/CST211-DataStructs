/***************************************************************************************************
* Author:						Tanna McClure
* File:							Cell.cpp
* Date Created:					1/11/2015
*
* Modification Date: 			1/12/15
* Modification: 				Wrote function definitions
*		  
***************************************************************************************************/
#include "Cell.h"

/***************************************************************************************************
*	Purpose: default ctor
*
*	Entry: none
*
*	Exit: initialized to empty and hidden
***************************************************************************************************/
Cell::Cell() : m_type(EMPTY), m_status(HIDDEN)
{ }
/***************************************************************************************************
*	Purpose: copy ctor
*
*	Entry: the cell to copy
*
*	Exit: this = copy
***************************************************************************************************/
Cell::Cell(const Cell & copy) : m_status(copy.m_status), m_type(copy.m_type)
{ }
/***************************************************************************************************
*	Purpose: dtor
*
*	Entry: none
*
*	Exit: set back to empty and hidden
***************************************************************************************************/
Cell::~Cell()
{
	m_type = EMPTY;
	m_status = HIDDEN;
}
/***************************************************************************************************
*	Purpose: assignment operator
*
*	Entry: cell to equal
*
*	Exit: this = rhs
***************************************************************************************************/
Cell & Cell::operator=(const Cell & rhs)
{
	m_status = rhs.m_status;
	m_type = rhs.m_type;
	return *this;
}
/***************************************************************************************************
*	Purpose: gets the status of the cell
*
*	Entry: none
*
*	Exit: returns m_status
***************************************************************************************************/
Cell::STATUS Cell::GetStatus() const
{
	return m_status; 
}
/***************************************************************************************************
*	Purpose: gets the type of cell
*
*	Entry: none
*
*	Exit: returns m_type
***************************************************************************************************/
Cell::TYPE Cell::GetType() const
{
	return m_type;
}
/***************************************************************************************************
*	Purpose: sets the status
*
*	Entry: the new status
*
*	Exit: m_status is changed
***************************************************************************************************/
void Cell::SetStatus(STATUS stat)
{
	m_status = stat;
}
/***************************************************************************************************
*	Purpose: sets the type
*
*	Entry: the new type
*
*	Exit: m_type is changed
***************************************************************************************************/
void Cell::SetType(TYPE ty)
{
	m_type = ty;
}